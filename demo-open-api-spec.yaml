openapi: 3.0.3
info:
  title: Game Resource API
  description: Demo Swagger Specification for the Game Resource API
  version: 1.1.0
servers:
  - url: /v1
tags:
  - name: Games
paths:
  /games:
    get:
      tags:
        - Games
      summary: Read all games.
      description: Read all games
      responses:
        "200":
          description: All games read successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Games"
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    post:
      tags:
        - Games
      summary: Create game.
      description: Create game
      requestBody:
        $ref: "#/components/requestBodies/Game"
      responses:
        "201":
          description: Game created successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GameResponse"
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /games/{id}:
    get:
      tags:
        - Games
      summary: Read game.
      description: Read game by id
      parameters:
        - name: id
          in: path
          description: Id of game to be read.
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Game read successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Game"
        "404":
          description: Game not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    patch:
      tags:
        - Games
      summary: Patch game.
      description: Patch game by id
      parameters:
        - name: id
          in: path
          description: Id of game to be patched.
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/JsonPatch"
      responses:
        "200":
          description: Game patched successfully.
        "404":
          description: Game not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    put:
      tags:
        - Games
      summary: Update game.
      description: Update game by id
      parameters:
        - name: id
          in: path
          description: Id of game to be updated.
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Game"
      responses:
        "200":
          description: Game updated successfully.
        "404":
          description: Game not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    delete:
      tags:
        - Games
      summary: Delete game.
      description: Delete game by id
      parameters:
        - name: id
          in: path
          description: Id of game to be deleted.
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Game deleted successfully.
        "404":
          description: Game not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
components:
  schemas:
    Games:
      required:
        - games
      type: object
      properties:
        games:
          type: array
          items:
            $ref: "#/components/schemas/Game"
    Game:
      required:
        - id
        - title
        - platform
        - date
        - link
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Id of game.
          example: 992
        meta_score:
          type: string
          description: Metacritic score of game.
          example: 99
        title:
          type: string
          description: Title of game.
          example: "The Legend of Zelda: Ocarina of Time"
        platform:
          type: string
          description: Platform of game.
          example: N64
        date:
          type: string
          description: Release date of game.
          example: Nov 23, 1998
        user_score:
          type: string
          description: Metacritic user score of game.
          example: 9.1
        link:
          type: string
          description: Metacritic link of game.
          example: /game/nintendo-64/the-legend-of-zelda-ocarina-of-time
        esrb_rating:
          type: string
          description: ESRB rating of game.
          example: E
    GameRequest:
      required:
        - title
        - platform
        - date
        - link
      type: object
      properties:
        meta_score:
          type: string
          description: Metacritic score of game.
          example: 99
        title:
          type: string
          description: Title of game.
          example: "The Legend of Zelda: Ocarina of Time"
        platform:
          type: string
          description: Platform of game.
          example: N64
        date:
          type: string
          description: Release date of game.
          example: Nov 23, 1998
        user_score:
          type: string
          description: Metacritic user score of game.
          example: 9.1
        link:
          type: string
          description: Metacritic link of game.
          example: /game/nintendo-64/the-legend-of-zelda-ocarina-of-time
        esrb_rating:
          type: string
          description: ESRB rating of game.
          example: E
    GameResponse:
      required:
        - id
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Id of game.
          example: 992
    JsonPatchOperation:
      required:
        - op
        - path
      type: object
      properties:
        op:
          type: string
          description: Operation of Json patch.
          example: replace
        path:
          type: string
          description: Path of Json patch.
          example: title
    PathValueOperation:
      allOf:
        - $ref: "#/components/schemas/JsonPatchOperation"
      required:
        - value
      type: object
      properties:
        value:
          type: string
          description: Value of Json patch.
          example: "The Legend of Zelda: Tears of the Kingdom"
    ReplaceOperation:
      allOf:
        - $ref: "#/components/schemas/PathValueOperation"
    JsonPatchRequest:
      type: array
      items:
        $ref: "#/components/schemas/ReplaceOperation"
    ErrorResponse:
      required:
        - message
      type: object
      properties:
        message:
          type: string
          description: Message of error.
          example: Oops, something went wrong.
  requestBodies:
    Game:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/GameRequest"
    JsonPatch:
      required: true
      content:
        application/json-patch+json:
          schema:
            $ref: "#/components/schemas/JsonPatchRequest"